[snapraid-btrfs]
; path to the snapraid-btrfs executable (e.g. /usr/bin/snapraid-btrfs)
executable = {{ snapraid_btrfs_bin_path }}
; optional: specify snapper-configs and/or snapper-configs-file as specified in snapraid-btrfs
; only one instance of each can be specified in this config
snapper-configs = 
snapper-configs-file = 
; specify whether snapraid-btrfs should run the pool command after the sync, and optionally specify pool-dir 
pool = false
pool-dir =
; specify whether snapraid-btrfs-runner should automatically clean up all but the last snapraid-btrfs sync snapshot after a successful sync
cleanup = true

[snapper]
; path to snapper executable (e.g. /usr/bin/snapper)
executable = /usr/bin/snapper

[snapraid]
; path to the snapraid executable
executable = {{ snapraid_bin_path }}
; path to the snapraid config to be used
config = {{ snapraid_config_path }}
; abort operation if there are more deletes than this, set to -1 to disable
deletethreshold = {{ snapraid_runner_delete_threshold }}
; if you want touch to be run each time
touch = {{ snapraid_runner_touch }}

[logging]
; logfile to write to, leave empty to disable
file = snapraid.log
; maximum logfile size in KiB, leave empty for infinite
maxsize = 5000

[email]
; when to send an email, comma-separated list of [success, error]
sendon = {{ snapraid_runner_email_sendon }}
; set to false to get full program output via email
short = true
subject = [SnapRAID] Status Report:
from = {{ snapraid_runner_email_address_from }}
to = {{ snapraid_runner_email_address_to }}

[smtp]
host = {{ snapraid_runner_smtp_host }}
; leave empty for default port
port = {{ snapraid_runner_smtp_port }}
; set to "true" to activate
ssl = {{ snapraid_runner_use_ssl }}
user = {{ snapraid_runner_email_address }}
password = {{ snapraid_runner_email_pass }}

[scrub]
; set to true to run scrub after sync
enabled = {{ snapraid_runner_scrub }}
percentage = {{ snapraid_scrub_percent }}
older-than = {{ snapraid_scrub_age }}
